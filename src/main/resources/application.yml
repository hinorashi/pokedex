server:
  port: 8080

spring:
  profiles:
    active: h2
  application:
    name: pokedex
  jpa:
    open-in-view: false # disable database queries to be performed during view rendering
    show-sql: true
  #    properties:
  #      hibernate:
  #        format_sql: true
  #  datasource: # FIXME change to another DB
  #    url: jdbc:h2:mem:pokedex;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE

  cache:
    type: redis
  redis:
    database: 1
    client-name: pokedex
    url: redis://pokedex:hino123@localhost:6379
  data:
    redis:
      repositories:
        enabled: false # we use redis for caching, not for data persistence

management:
  server:
    port: 8081
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      enabled: true
      show-details: always
    shutdown:
      enabled: true
    mappings:
      enabled: true
    configprops:
      enabled: true
    env:
      enabled: true

---
spring:
  profiles: h2
  datasource:
    url: jdbc:h2:mem:pokedex;DB_CLOSE_DELAY=-1
  h2:
    console:
      enabled: true
      path: /h2
      settings:
        web-allow-others: true

---
spring:
  profiles: cloud
  redis:
    url: redis://pokedex:hino123@redis-cache:6379 # refer docker-compose.yaml as an example
